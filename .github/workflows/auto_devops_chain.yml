name: Auto DevOps

on:
  workflow_dispatch:
    inputs:
      chain-id:
        required: false
        type: string
        description: Chain-ID name?, if you leave it empty, the default name will be like [app-v100-node-v0110]
      app_version:
        required: true
        type: string
        description: Celestia App Image Version
      node_version:
        required: true
        type: string
        description: Celestia Node Image Version

# ----------------------------------------------------------------------------

jobs:
   prepare-env:
    runs-on: "ubuntu-latest"
    env:
     OUTPUT_ARGOCD_APP_PR: ${{ needs.argocd-apps.outputs.output-argocd-apps-pr }}
     OUTPUT_CELESTIA_STACK_INTERNAL: ${{ needs.celestia-stack-internal.outputs.output-celestia-stack-internal-pr }}
     OUTPUT_CELESTIA_INTERNAL_TOOLS: ${{ needs.celestia-internal-tools.outputs.output-celestia-internal-tools-pr }}
    steps:
      - name: PRs summary
        run: |
          ifÂ [[ -n "${{ github.event.inputs.chain-id }}" ]];then
            echo "Name defined"
            echo ${{ github.event.inputs.chain-id }}
          else
            echo "Name NOT defined"
            echo ${{ github.event.inputs.chain-id }}
          fi
          echo ${{ github.event.inputs.chain-id }}
          #echo "ArgoCD-Apps PR: [${{ env.OUTPUT_ARGOCD_APP_PR }}]"
          #echo "Celestia Stack Internal PR: [${{ env.OUTPUT_CELESTIA_STACK_INTERNAL }}]"
          #echo "Celestia Internal Tools PR: [${{ env.OUTPUT_CELESTIA_INTERNAL_TOOLS }}]"

## ----------------------------------------------------------------------------
#   argocd-apps:
#    needs: ["prepare-env"]
#    permissions:
#      contents: write
#      pull-requests: write
#      repository-projects: write
#    runs-on: "ubuntu-latest"
#    env:
#      TOKEN: ${{ secrets.ACCESS_TOKEN }}
#      GITHUB_TOKEN: ${{ github.token }}
#      ORG_NAME: "celestiaorg"
#      REPO_NAME: "argocd-apps"
#      DEVOPS_ASSIGNEES: ("Bidon15" "sysrex" "jrmanes" "smuu")
#    outputs:
#      output-argocd-apps-pr: ${{ steps.create_pr.outputs.argocd_apps_pr }}
#    steps:
#      - name: Checkout
#        uses: "actions/checkout@v3"
#      - name: Configure git
#        run: |
#          git config --global url."https://${{ env.TOKEN }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"
#          git config --global user.email "devops@celestia.org"
#          git config --global user.name "autodevops"
#      - name: Clone Repo
#        run: |
#          git clone https://github.com/${{ env.ORG_NAME }}/${{ env.REPO_NAME }}.git
#          cd ${{ env.REPO_NAME }}
#          git fetch; git pull
#      - name: Create the branch
#        run: |
#          cd ${{ env.REPO_NAME }}
#          git checkout -b autodevops/${{ github.event.inputs.chain-id }}
#      - name: Run scripts
#        run: |
#          cd ${{ env.REPO_NAME }}
#          ./scripts/auto_robusta_chain.sh ${{ github.event.inputs.chain-id }}
#      - name: Commit & Push the new resources
#        run: |
#          cd ${{ env.REPO_NAME }}
#          git branch
#          git add .
#          git commit -m "Resources added for the new Chain-id added: [${{ github.event.inputs.chain-id }}]"
#          git push origin autodevops/${{ github.event.inputs.chain-id }}
#      - name: Create PR
#        id: create_pr
#        env:
#          GITHUB_TOKEN: ${{ env.TOKEN }}
#        run: |
#          cd ${{ env.REPO_NAME }}
#          pr_number=$(gh pr create --base main \
#                       --head autodevops/${{ github.event.inputs.chain-id }} \
#                       --title "AutoDevOps: New ChainID -> [${{ github.event.inputs.chain-id }}]" \
#                       --body "Hello DevOps! Let's setup the new resources for the new chain-id: [${{ github.event.inputs.chain-id }}]" \
#                       --label "devops,automation,enhancement" \
#                       --repo https://github.com/${{ env.ORG_NAME }}/${{ env.REPO_NAME }})
#          # Get only the PR id
#          echo "argocd_apps_pr=$(echo $pr_number)" >> $GITHUB_OUTPUT
#          echo "pr_number=$(echo $pr_number|rev|cut -d'/' -f1|rev)" >> $GITHUB_OUTPUT
#      - name: Update The Assignees
#        env:
#          GITHUB_TOKEN: ${{ env.TOKEN }}
#        run: |
#          pr_number=${{ steps.create_pr.outputs.pr_number }}
#          assignees=${{ env.DEVOPS_ASSIGNEES }}
#          for assignee in "${assignees[@]}"; do
#            for i in "assignee" "reviewer"; do
#              gh pr edit $pr_number --add-$i $assignee --repo ${{ env.ORG_NAME }}/${{ env.REPO_NAME }}
#            done
#          done
#
## ----------------------------------------------------------------------------
#   celestia-stack-internal:
#    needs: ["prepare-env"]
#    permissions:
#      contents: write
#      pull-requests: write
#      repository-projects: write
#    runs-on: "ubuntu-latest"
#    env:
#      TOKEN: ${{ secrets.ACCESS_TOKEN }}
#      GITHUB_TOKEN: ${{ github.token }}
#      ORG_NAME: "celestiaorg"
#      REPO_NAME: "celestia-stack-internal"
#      DEVOPS_ASSIGNEES: ("Bidon15" "sysrex" "jrmanes" "smuu")
#      BASE_CHAIN_ID: "robusta-2"
#    outputs:
#      output-celestia-stack-internal-pr: ${{ steps.create_pr.outputs.celestia_stack_internal_pr}}
#    steps:
#      - name: Checkout
#        uses: "actions/checkout@v3"
#      - name: Configure git
#        run: |
#          git config --global url."https://${{ env.TOKEN }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"
#          git config --global user.email "devops@celestia.org"
#          git config --global user.name "autodevops"
#      - name: Clone Repo
#        run: |
#          git clone https://github.com/${{ env.ORG_NAME }}/${{ env.REPO_NAME }}.git
#          cd ${{ env.REPO_NAME }}
#          git fetch; git pull
#      - name: Create the branch
#        run: |
#          cd ${{ env.REPO_NAME }}
#          git checkout -b autodevops/${{ github.event.inputs.chain-id }}
#      - name: Run scripts
#        run: |
#          cd ${{ env.REPO_NAME }}
#          ./scripts/auto_devops_chain.sh -b ${{ env.BASE_CHAIN_ID }} \
#                                         -c ${{ github.event.inputs.chain-id }} \
#                                         -a ${{ github.event.inputs.app_version }} \
#                                         -n ${{ github.event.inputs.node_version }} \
#                                         -f
#      - name: Commit & Push the new resources
#        run: |
#          cd ${{ env.REPO_NAME }}
#          git branch
#          git add .
#          git commit -m "Resources added for the new Chain-id added: [${{ github.event.inputs.chain-id }}]"
#          git push origin autodevops/${{ github.event.inputs.chain-id }}
#      - name: Create PR
#        id: create_pr
#        env:
#          GITHUB_TOKEN: ${{ env.TOKEN }}
#        run: |
#          cd ${{ env.REPO_NAME }}
#          pr_number=$(gh pr create --base main \
#                       --head autodevops/${{ github.event.inputs.chain-id }} \
#                       --title "AutoDevOps: New ChainID -> [${{ github.event.inputs.chain-id }}]" \
#                       --body "Hello DevOps! Let's setup the new resources for the new chain-id: [${{ github.event.inputs.chain-id }}]" \
#                       --label "devops,automation,enhancement" \
#                       --repo https://github.com/${{ env.ORG_NAME }}/${{ env.REPO_NAME }})
#          # Get only the PR id
#          echo "celestia_stack_internal_pr=$(echo $pr_number)" >> $GITHUB_OUTPUT
#          echo "pr_number=$(echo $pr_number|rev|cut -d'/' -f1|rev)" >> $GITHUB_OUTPUT
#      - name: Update The Assignees
#        env:
#          GITHUB_TOKEN: ${{ env.TOKEN }}
#        run: |
#          pr_number=${{ steps.create_pr.outputs.pr_number }}
#          assignees=${{ env.DEVOPS_ASSIGNEES }}
#          for assignee in "${assignees[@]}"; do
#            for i in "assignee" "reviewer"; do
#              gh pr edit $pr_number --add-$i $assignee --repo ${{ env.ORG_NAME }}/${{ env.REPO_NAME }}
#            done
#          done
#
## ----------------------------------------------------------------------------
#   celestia-internal-tools:
#    needs: ["prepare-env"]
#    permissions:
#      contents: write
#      pull-requests: write
#      repository-projects: write
#    runs-on: "ubuntu-latest"
#    env:
#      TOKEN: ${{ secrets.ACCESS_TOKEN }}
#      GITHUB_TOKEN: ${{ github.token }}
#      ORG_NAME: "celestiaorg"
#      REPO_NAME: "celestia-internal-tools"
#      DEVOPS_ASSIGNEES: ("Bidon15" "sysrex" "jrmanes" "smuu")
#    outputs:
#      output-celestia-internal-tools-pr: ${{ steps.create_pr.outputs.celestia_internal_tools_pr}}
#    steps:
#      - name: Checkout
#        uses: "actions/checkout@v3"
#      - name: Configure git
#        run: |
#          git config --global url."https://${{ env.TOKEN }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"
#          git config --global user.email "devops@celestia.org"
#          git config --global user.name "autodevops"
#      - name: Clone Repo
#        run: |
#          git clone https://github.com/${{ env.ORG_NAME }}/${{ env.REPO_NAME }}.git
#          cd ${{ env.REPO_NAME }}
#          git fetch; git pull
#      - name: Create the branch
#        run: |
#          cd ${{ env.REPO_NAME }}
#          git checkout -b autodevops/${{ github.event.inputs.chain-id }}
#      - name: Run scripts
#        run: |
#          cd ${{ env.REPO_NAME }}
#          ./scripts/grafana_auto_devops.sh ${{ github.event.inputs.chain-id }}
#      - name: Commit & Push the new resources
#        run: |
#          cd ${{ env.REPO_NAME }}
#          git branch
#          git add .
#          git commit -m "Resources added for the new Chain-id added: [${{ github.event.inputs.chain-id }}]"
#          git push origin autodevops/${{ github.event.inputs.chain-id }}
#      - name: Create PR
#        id: create_pr
#        env:
#          GITHUB_TOKEN: ${{ env.TOKEN }}
#        run: |
#          cd ${{ env.REPO_NAME }}
#          pr_number=$(gh pr create --base main \
#                       --head autodevops/${{ github.event.inputs.chain-id }} \
#                       --title "AutoDevOps: New ChainID -> [${{ github.event.inputs.chain-id }}]" \
#                       --body "Hello DevOps! Let's setup the new resources for the new chain-id: [${{ github.event.inputs.chain-id }}]" \
#                       --label "devops,automation,enhancement" \
#                       --repo https://github.com/${{ env.ORG_NAME }}/${{ env.REPO_NAME }})
#          # Get only the PR id
#          echo "celestia_internal_tools_pr=$(echo $pr_number)" >> $GITHUB_OUTPUT
#          echo "pr_number=$(echo $pr_number|rev|cut -d'/' -f1|rev)" >> $GITHUB_OUTPUT
#      - name: Update The Assignees
#        env:
#          GITHUB_TOKEN: ${{ env.TOKEN }}
#        run: |
#          pr_number=${{ steps.create_pr.outputs.pr_number }}
#          assignees=${{ env.DEVOPS_ASSIGNEES }}
#          for assignee in "${assignees[@]}"; do
#            for i in "assignee" "reviewer"; do
#              gh pr edit $pr_number --add-$i $assignee --repo ${{ env.ORG_NAME }}/${{ env.REPO_NAME }}
#            done
#          done
#
## ----------------------------------------------------------------------------
#   summary:
#    needs: ["prepare-env", "argocd-apps","celestia-stack-internal","celestia-internal-tools"]
#    runs-on: "ubuntu-latest"
#    env:
#     OUTPUT_ARGOCD_APP_PR: ${{ needs.argocd-apps.outputs.output-argocd-apps-pr }}
#     OUTPUT_CELESTIA_STACK_INTERNAL: ${{ needs.celestia-stack-internal.outputs.output-celestia-stack-internal-pr }}
#     OUTPUT_CELESTIA_INTERNAL_TOOLS: ${{ needs.celestia-internal-tools.outputs.output-celestia-internal-tools-pr }}
#    steps:
#      - name: PRs summary
#        run: |
#          echo "ArgoCD-Apps PR: [${{ env.OUTPUT_ARGOCD_APP_PR }}]"
#          echo "Celestia Stack Internal PR: [${{ env.OUTPUT_CELESTIA_STACK_INTERNAL }}]"
#          echo "Celestia Internal Tools PR: [${{ env.OUTPUT_CELESTIA_INTERNAL_TOOLS }}]"


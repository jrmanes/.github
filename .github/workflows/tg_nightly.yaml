name: TestGround Nightly

on:
  push:
    branches:
      - 'main'

env:
  REPO_TG: https://github.com/testground/testground.git
  REPO_TEST_TG: https://github.com/celestiaorg/test-infra.git
  ORG: celestiaorg
  CELESTIA_NODE_REPO: celestia-node
  BRANCH: main
  TG_USER: ga-bot
  # TESTGROUND_URL: # You have to create a secret in the repo with the value
  # TESTGROUND_REGION: # You have to create a secret in repo with the value
 
jobs:
  testground:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Clone the repo
        run: |
          echo "-----------------------------------------"
          ls ${{ github.workspace }}
          echo "-----------------------------------------"
          git clone ${{ env.REPO_TG }}
          git clone ${{ env.REPO_TEST_TG }}
          echo "-----------------------------------------"
          ls ${{ github.workspace }}
          echo "-----------------------------------------"

      - name: Build TestGround
        run: |
          export GOBIN=$(go env GOPATH)/bin
          mkdir -p $GOBIN
          cd testground
          make goinstall
          echo "-----------------------------------------"
          ls -ltra ./
          echo "-----------------------------------------"
          go env
          echo $GOBIN
          echo "-----------------------------------------"
          #make install # builds testground and the Docker image, used by the local:docker runner.
          echo "-----------------------------------------"
          pwd
          echo "-----------------------------------------"

      - name: Generate Config TestGround
        run: |
          mkdir -p ~/.config/testground/
          cat <<EOF > ~/.config/testground/.env.toml
          [aws]
          region="${{ secrets.TESTGROUND_REGION }}"
          [client]
          endpoint = "${{ secrets.TESTGROUND_URL }}"
          user="${{ env.TG_USER }}"
          EOF
          cat ~/.config/testground/.env.toml

      #- name: Print Go Env Vars
      #  run: |
      #    cat ~/.config/testground/.env.toml
      #    export GOBIN=$(go env GOPATH)/bin
      #    mkdir -p $GOBIN
      #    echo "-----------------------------------------"
      #    echo $GOBIN
      #    echo "-----------------------------------------"
      #    go version
      #    echo "-----------------------------------------"
      #    go env
      #    echo "-----------------------------------------"
      #    pwd
      #    echo "-----------------------------------------"
      #    ls ./
      #    echo "-----------------------------------------"
      #    ls -ltra $GOBIN
      #    echo "-----------------------------------------"
      #    cd testground
      #    echo "-----------------------------------------"
      #    pwd
      #    echo "-----------------------------------------"
      #    ls ./
      #    echo "-----------------------------------------"
      #    $GOBIN/testground

      - name: Update the Celestia Node to last commit
        run: |
          cd test-infra
          ls ./
          echo "-----------------------------------------"
          CELESTIA_NODE=$(curl -Ls https://api.github.com/repos/${ORG}/${CELESTIA_NODE_REPO}/commits/${BRANCH} | jq -c '.sha'| tr -d '"'| cut -c1-7)
          echo $CELESTIA_NODE
          echo "-----------------------------------------"
          ls -ltra ./
          echo "-----------------------------------------"
          sed -i "s|github.com/${ORG}/${CELESTIA_NODE_REPO}.*|github.com/${ORG}${CELESTIA_NODE_REPO} ${CELESTIA_NODE}|g" go.mod
          cat go.mod
          echo "-----------------------------------------"

      - name: Plan the execution
        run: |
          export GOBIN=$(go env GOPATH)/bin
          cd test-infra
          $GOBIN/testground plan import --from . --name ${{ env.TG_USER }}

          #    make install       # builds testground and the Docker image, used by the local:docker runner.
          #    testground -h
          #    testground daemon  # will start the daemon listening on localhost:8042 by default.
          #    #testground plan import --from ./plans/network
          #    #testground run single --plan=network --testcase=ping-pong \
          #    #--builder=docker:go --runner=local:docker \

          #- name: Build TestGround
          #  run: |
          #    cd testground
          #    testground -h

          #- name: Get the latest commit in celestia-node
          #  run: |
          #    apt update; apt install -y jq
          #    CELESTIA_NODE=$(curl -Ls https://api.github.com/repos/${{ env.ORG }}/celestia-node/commits/${{ env.BRANCH }} | jq -c '.sha'| tr -d '"'| cut -c1-7)
          #    echo $CELESTIA_NODE
